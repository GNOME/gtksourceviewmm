;; From GtkSourceBuffer

(define-signal can-undo
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal can-redo
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal highlight-updated
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "p0")
    '("GtkTextIter*" "p1")
  )
)

(define-signal marker-updated
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "p0")
  )
)

(define-property tag-table
  (of-object "GtkSourceBuffer")
  (prop-type "GParamObject")
  (docs "Text Tag Table")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property text
  (of-object "GtkSourceBuffer")
  (prop-type "GParamString")
  (docs "Current text of the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property escape-char
  (of-object "GtkSourceBuffer")
  (prop-type "GParamUnichar")
  (docs "Escaping character for syntax patterns")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property check-brackets
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether to check and highlight matching brackets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property highlight
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether to highlight syntax in the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-undo-levels
  (of-object "GtkSourceBuffer")
  (prop-type "GParamInt")
  (docs "Number of undo levels for the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkSourceBuffer")
  (prop-type "GParamObject")
  (docs "Language object to get highlighting patterns from")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceLanguage

(define-signal tag-style-changed
  (of-object "GtkSourceLanguage")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
  )
)

;; From GtkSourceLanguagesManager

(define-property lang-files-dirs
  (of-object "GtkSourceLanguagesManager")
  (prop-type "GParamPointer")
  (docs "List of directories where the language specification files (.lang) are located")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GtkTextMark

;; From GtkSourcePrintJob

(define-signal begin-page
  (of-object "GtkSourcePrintJob")
  (return-type "void")
  (when "last")
)

(define-signal finished
  (of-object "GtkSourcePrintJob")
  (return-type "void")
  (when "first")
)

(define-property config
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamObject")
  (docs "Configuration options for the print job")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamObject")
  (docs "GtkSourceBuffer object to print")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-width
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamUInt")
  (docs "Width in equivalent space characters of tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamEnum")
  (docs "Word wrapping mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property highlight
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoolean")
  (docs "Whether to print the document with highlighted syntax")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamString")
  (docs "GnomeFont name to use for the document text (deprecated)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoxed")
  (docs "Font to use for the document text (e.g. 'Monospace 10')")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property numbers-font
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamString")
  (docs "GnomeFont name to use for the line numbers (deprecated)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property numbers-font-desc
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoxed")
  (docs "Font description to use for the line numbers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-numbers
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamUInt")
  (docs "Interval of printed line numbers (0 means no numbers)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-header
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoolean")
  (docs "Whether to print a header in each page")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-footer
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoolean")
  (docs "Whether to print a footer in each page")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property header-footer-font
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamString")
  (docs "GnomeFont name to use for the header and footer (deprecated)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property header-footer-font-desc
  (of-object "GtkSourcePrintJob")
  (prop-type "GParamBoxed")
  (docs "Font to use for headers and footers (e.g. 'Monospace 10')")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceTag

(define-property name
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Name used to refer to the text tag. NULL for anonymous tags")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property background
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property foreground
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Foreground color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "Background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-gdk
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "Foreground color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple
  (of-object "GtkSourceTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text background")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple
  (of-object "GtkSourceTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text foreground")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Font description as a string, e.g. 'Sans Italic 12'")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "Font description as a PangoFontDescription struct")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Name of the font family, e.g. Sans, Helvetica, Times, Monospace")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Font style as a PangoStyle, e.g. PANGO_STYLE_ITALIC")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Font variant as a PangoVariant, e.g. PANGO_VARIANT_SMALL_CAPS")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Font weight as an integer, see predefined values in PangoWeight; for example, PANGO_WEIGHT_BOLD")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Font stretch as a PangoStretch, e.g. PANGO_STRETCH_CONDENSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Font size in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-points
  (of-object "GtkSourceTag")
  (prop-type "GParamDouble")
  (docs "Font size in points")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale
  (of-object "GtkSourceTag")
  (prop-type "GParamDouble")
  (docs "Font size as a scale factor relative to the default font size. This properly adapts to theme changes etc. so is recommended. Pango predefines some scales such as PANGO_SCALE_X_LARGE")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space above paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space below paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space between wrapped lines in a paragraph")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether the text can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Whether to wrap lines never, at word boundaries, or at character boundaries")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Left, right, or center justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Text direction, e.g. right-to-left or left-to-right")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Width of the left margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Amount to indent the paragraph, in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether to strike through the text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Width of the right margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline
  (of-object "GtkSourceTag")
  (prop-type "GParamEnum")
  (docs "Style of underline for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise
  (of-object "GtkSourceTag")
  (prop-type "GParamInt")
  (docs "Offset of text above the baseline (below the baseline if rise is negative) in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether the background color fills the entire line height or only the height of the tagged characters")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "The language this text is in, as an ISO code. Pango can use this as a hint when rendering the text. If not set, an appropriate default will be used.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "Custom tabs for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this text is hidden.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "Paragraph background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-gdk
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "Paragraph background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font family")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font style")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font variant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font weight")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font stretch")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font size")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag scales the font size by a factor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels between wrapped lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text editability")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects line wrap mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects paragraph justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the left margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects indentation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects strikethrough")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects underlining")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the rise")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects background height")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the language the text is rendered as")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text visibility")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-set
  (of-object "GtkSourceTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the paragraph background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property id
  (of-object "GtkSourceTag")
  (prop-type "GParamString")
  (docs "ID used to refer to the source tag")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property tag-style
  (of-object "GtkSourceTag")
  (prop-type "GParamBoxed")
  (docs "The style associated with the source tag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceStyleScheme

;; From GtkSyntaxTag

(define-property name
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Name used to refer to the text tag. NULL for anonymous tags")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property background
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property foreground
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Foreground color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "Background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-gdk
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "Foreground color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple
  (of-object "GtkSyntaxTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text background")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple
  (of-object "GtkSyntaxTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text foreground")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Font description as a string, e.g. 'Sans Italic 12'")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "Font description as a PangoFontDescription struct")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Name of the font family, e.g. Sans, Helvetica, Times, Monospace")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Font style as a PangoStyle, e.g. PANGO_STYLE_ITALIC")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Font variant as a PangoVariant, e.g. PANGO_VARIANT_SMALL_CAPS")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Font weight as an integer, see predefined values in PangoWeight; for example, PANGO_WEIGHT_BOLD")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Font stretch as a PangoStretch, e.g. PANGO_STRETCH_CONDENSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Font size in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-points
  (of-object "GtkSyntaxTag")
  (prop-type "GParamDouble")
  (docs "Font size in points")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale
  (of-object "GtkSyntaxTag")
  (prop-type "GParamDouble")
  (docs "Font size as a scale factor relative to the default font size. This properly adapts to theme changes etc. so is recommended. Pango predefines some scales such as PANGO_SCALE_X_LARGE")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space above paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space below paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space between wrapped lines in a paragraph")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether the text can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Whether to wrap lines never, at word boundaries, or at character boundaries")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Left, right, or center justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Text direction, e.g. right-to-left or left-to-right")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Width of the left margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Amount to indent the paragraph, in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether to strike through the text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Width of the right margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline
  (of-object "GtkSyntaxTag")
  (prop-type "GParamEnum")
  (docs "Style of underline for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise
  (of-object "GtkSyntaxTag")
  (prop-type "GParamInt")
  (docs "Offset of text above the baseline (below the baseline if rise is negative) in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether the background color fills the entire line height or only the height of the tagged characters")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "The language this text is in, as an ISO code. Pango can use this as a hint when rendering the text. If not set, an appropriate default will be used.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "Custom tabs for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this text is hidden.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "Paragraph background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-gdk
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "Paragraph background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font family")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font style")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font variant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font weight")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font stretch")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font size")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag scales the font size by a factor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels between wrapped lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text editability")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects line wrap mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects paragraph justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the left margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects indentation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects strikethrough")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects underlining")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the rise")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects background height")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the language the text is rendered as")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text visibility")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-set
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the paragraph background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property id
  (of-object "GtkSyntaxTag")
  (prop-type "GParamString")
  (docs "ID used to refer to the source tag")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property tag-style
  (of-object "GtkSyntaxTag")
  (prop-type "GParamBoxed")
  (docs "The style associated with the source tag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkPatternTag

(define-property name
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Name used to refer to the text tag. NULL for anonymous tags")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property background
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property foreground
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Foreground color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property background-gdk
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "Background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-gdk
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "Foreground color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple
  (of-object "GtkPatternTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text background")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple
  (of-object "GtkPatternTag")
  (prop-type "GParamObject")
  (docs "Bitmap to use as a mask when drawing the text foreground")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Font description as a string, e.g. 'Sans Italic 12'")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property font-desc
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "Font description as a PangoFontDescription struct")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Name of the font family, e.g. Sans, Helvetica, Times, Monospace")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Font style as a PangoStyle, e.g. PANGO_STYLE_ITALIC")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Font variant as a PangoVariant, e.g. PANGO_VARIANT_SMALL_CAPS")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Font weight as an integer, see predefined values in PangoWeight; for example, PANGO_WEIGHT_BOLD")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Font stretch as a PangoStretch, e.g. PANGO_STRETCH_CONDENSED")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Font size in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-points
  (of-object "GtkPatternTag")
  (prop-type "GParamDouble")
  (docs "Font size in points")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale
  (of-object "GtkPatternTag")
  (prop-type "GParamDouble")
  (docs "Font size as a scale factor relative to the default font size. This properly adapts to theme changes etc. so is recommended. Pango predefines some scales such as PANGO_SCALE_X_LARGE")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space above paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space below paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Pixels of blank space between wrapped lines in a paragraph")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether the text can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Whether to wrap lines never, at word boundaries, or at character boundaries")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Left, right, or center justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property direction
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Text direction, e.g. right-to-left or left-to-right")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Width of the left margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Amount to indent the paragraph, in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether to strike through the text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Width of the right margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline
  (of-object "GtkPatternTag")
  (prop-type "GParamEnum")
  (docs "Style of underline for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise
  (of-object "GtkPatternTag")
  (prop-type "GParamInt")
  (docs "Offset of text above the baseline (below the baseline if rise is negative) in Pango units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether the background color fills the entire line height or only the height of the tagged characters")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "The language this text is in, as an ISO code. Pango can use this as a hint when rendering the text. If not set, an appropriate default will be used.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "Custom tabs for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this text is hidden.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "Paragraph background color as a string")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-gdk
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "Paragraph background color as a (possibly unallocated) GdkColor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-stipple-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the background stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property foreground-stipple-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the foreground stipple")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property family-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font family")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font style")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property variant-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font variant")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property weight-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font weight")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property stretch-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font stretch")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property size-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the font size")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag scales the font size by a factor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels above lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the number of pixels between wrapped lines")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text editability")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects line wrap mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects paragraph justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the left margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects indentation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property strikethrough-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects strikethrough")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property underline-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects underlining")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property rise-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the rise")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property background-full-height-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects background height")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the language the text is rendered as")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property invisible-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects text visibility")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property paragraph-background-set
  (of-object "GtkPatternTag")
  (prop-type "GParamBoolean")
  (docs "Whether this tag affects the paragraph background color")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property id
  (of-object "GtkPatternTag")
  (prop-type "GParamString")
  (docs "ID used to refer to the source tag")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property tag-style
  (of-object "GtkPatternTag")
  (prop-type "GParamBoxed")
  (docs "The style associated with the source tag")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceTagStyle

;; From GtkSourceTagTable

(define-signal changed
  (of-object "GtkSourceTagTable")
  (return-type "void")
  (when "last")
)

;; From GtkSourceView

(define-signal undo
  (of-object "GtkSourceView")
  (return-type "void")
  (when "last")
)

(define-signal redo
  (of-object "GtkSourceView")
  (return-type "void")
  (when "last")
)

(define-property user-data
  (of-object "GtkSourceView")
  (prop-type "GParamPointer")
  (docs "Anonymous User Data Pointer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GtkSourceView")
  (prop-type "GParamString")
  (docs "The name of the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The parent widget of this widget. Must be a Container widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Override for width request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Override for height request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget responds to input")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the application will paint directly on the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can accept the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget has the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the focus widget within the toplevel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can be the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "If TRUE, the widget will receive the default action when it is focused")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is part of a composite widget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The style of the widget, which contains information about how it will look (colors etc)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GtkSourceView")
  (prop-type "GParamFlags")
  (docs "The event mask that decides what kind of GdkEvents this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "The mask that decides what kind of extension events this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;TODO: why can't this property definition be parsed ?
;(define-property no-show-all
;  (of-object "GtkSourceView")
;  (prop-type "GParamBoolean")
;  (docs "Whether gtk_widget_show_all() should not affect this widget")
;  (readable #t)
;  (writable #t)
;  (construct-only #f)
;)

(define-property border-width
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "The width of the empty border outside the containers children")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Specify how resize events are handled")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "Can be used to add a new child to the container")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space above paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space below paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space between wrapped lines in a paragraph")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the text can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Whether to wrap lines never, at word boundaries, or at character boundaries")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Left, right, or center justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Width of the left margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Width of the right margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Amount to indent the paragraph, in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkSourceView")
  (prop-type "GParamBoxed")
  (docs "Custom tabs for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursor-visible
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "If the insertion cursor is shown")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The buffer which is displayed")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property overwrite
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether entered text overwrites existing contents")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accepts-tab
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether Tab will result in a tab character being entered")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-line-numbers
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display line numbers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-line-markers
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display line marker pixbufs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs-width
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "Tabs Width")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-indent
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to enable auto indentation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property insert-spaces-instead-of-tabs
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to insert spaces instead of tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-margin
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property margin
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "Position of the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property smart-home-end
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "HOME and END keys move to first/last non whitespace characters on line before going to the start/end of the line")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property highlight-current-line
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to highlight the current line")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceSearchFlags

;; From GtkSourceTagStyleMask

