;; From GtkSourceBuffer

(define-signal highlight-updated
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkTextIter*" "p0")
    '("GtkTextIter*" "p1")
  )
)

(define-signal source-mark-updated
  (of-object "GtkSourceBuffer")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkSourceMark*" "p0")
  )
)

(define-property tag-table
  (of-object "GtkSourceBuffer")
  (prop-type "GParamObject")
  (docs "Text Tag Table")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property text
  (of-object "GtkSourceBuffer")
  (prop-type "GParamString")
  (docs "Current text of the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-selection
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether the buffer has some text currently selected")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property cursor-position
  (of-object "GtkSourceBuffer")
  (prop-type "GParamInt")
  (docs "The position of the insert mark (as offset from the beginning of the buffer)")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property copy-target-list
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoxed")
  (docs "The list of targets this buffer supports for clipboard copying and DND source")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property paste-target-list
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoxed")
  (docs "The list of targets this buffer supports for clipboard pasting and DND destination")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property can-undo
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether Undo operation is possible")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property can-redo
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether Redo operation is possible")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property highlight-syntax
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether to highlight syntax in the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property highlight-matching-brackets
  (of-object "GtkSourceBuffer")
  (prop-type "GParamBoolean")
  (docs "Whether to highlight matching brackets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property max-undo-levels
  (of-object "GtkSourceBuffer")
  (prop-type "GParamInt")
  (docs "Number of undo levels for the buffer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language
  (of-object "GtkSourceBuffer")
  (prop-type "GParamObject")
  (docs "Language object to get highlighting patterns from")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property style-scheme
  (of-object "GtkSourceBuffer")
  (prop-type "GParamObject")
  (docs "Style scheme")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceLanguage

(define-property id
  (of-object "GtkSourceLanguage")
  (prop-type "GParamString")
  (docs "Language id")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property name
  (of-object "GtkSourceLanguage")
  (prop-type "GParamString")
  (docs "Language name")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property section
  (of-object "GtkSourceLanguage")
  (prop-type "GParamString")
  (docs "Language section")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property hidden
  (of-object "GtkSourceLanguage")
  (prop-type "GParamBoolean")
  (docs "Whether the language should be hidden from the user")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GtkSourceLanguageManager

(define-property search-path
  (of-object "GtkSourceLanguageManager")
  (prop-type "GParamBoxed")
  (docs "List of directories where the language specification files (.lang) are located")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property language-ids
  (of-object "GtkSourceLanguageManager")
  (prop-type "GParamBoxed")
  (docs "List of the ids of the available languages")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GtkSourceMark

(define-property name
  (of-object "GtkSourceMark")
  (prop-type "GParamString")
  (docs "Mark name")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property left-gravity
  (of-object "GtkSourceMark")
  (prop-type "GParamBoolean")
  (docs "Whether the mark has left gravity")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property category
  (of-object "GtkSourceMark")
  (prop-type "GParamString")
  (docs "The mark category")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GtkSourceStyle

(define-property line-background
  (of-object "GtkSourceStyle")
  (prop-type "GParamString")
  (docs "Line background color")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property line-background-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether line background color is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property background
  (of-object "GtkSourceStyle")
  (prop-type "GParamString")
  (docs "Background color")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property background-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether background color is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property foreground
  (of-object "GtkSourceStyle")
  (prop-type "GParamString")
  (docs "Foreground color")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property foreground-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether foreground color is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property bold
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Bold")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property bold-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether bold attribute is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property italic
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Italic")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property italic-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether italic attribute is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property underline
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Underline")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property underline-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether underline attribute is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property strikethrough
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Strikethrough")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property strikethrough-set
  (of-object "GtkSourceStyle")
  (prop-type "GParamBoolean")
  (docs "Whether strikethrough attribute is set")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GtkSourceStyleScheme

(define-property id
  (of-object "GtkSourceStyleScheme")
  (prop-type "GParamString")
  (docs "Style scheme id")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property name
  (of-object "GtkSourceStyleScheme")
  (prop-type "GParamString")
  (docs "Style scheme name")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property description
  (of-object "GtkSourceStyleScheme")
  (prop-type "GParamString")
  (docs "Style scheme description")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property filename
  (of-object "GtkSourceStyleScheme")
  (prop-type "GParamString")
  (docs "Style scheme filename")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GtkSourceStyleSchemeManager

(define-property search-path
  (of-object "GtkSourceStyleSchemeManager")
  (prop-type "GParamBoxed")
  (docs "List of directories and files where the style schemes are located")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scheme-ids
  (of-object "GtkSourceStyleSchemeManager")
  (prop-type "GParamBoxed")
  (docs "List of the ids of the available style schemes")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GtkSourceView

(define-signal undo
  (of-object "GtkSourceView")
  (return-type "void")
  (when "last")
)

(define-signal redo
  (of-object "GtkSourceView")
  (return-type "void")
  (when "last")
)

(define-property user-data
  (of-object "GtkSourceView")
  (prop-type "GParamPointer")
  (docs "Anonymous User Data Pointer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GtkSourceView")
  (prop-type "GParamString")
  (docs "The name of the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The parent widget of this widget. Must be a Container widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Override for width request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Override for height request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget responds to input")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the application will paint directly on the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can accept the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget has the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the focus widget within the toplevel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can be the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "If TRUE, the widget will receive the default action when it is focused")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is part of a composite widget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The style of the widget, which contains information about how it will look (colors etc)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GtkSourceView")
  (prop-type "GParamFlags")
  (docs "The event mask that decides what kind of GdkEvents this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "The mask that decides what kind of extension events this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether gtk_widget_show_all() should not affect this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether this widget has a tooltip")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GtkSourceView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GtkSourceView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "The width of the empty border outside the containers children")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Specify how resize events are handled")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "Can be used to add a new child to the container")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-above-lines
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space above paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-below-lines
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space below paragraphs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property pixels-inside-wrap
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Pixels of blank space between wrapped lines in a paragraph")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property editable
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether the text can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property wrap-mode
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Whether to wrap lines never, at word boundaries, or at character boundaries")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property justification
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "Left, right, or center justification")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property left-margin
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Width of the left margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Width of the right margin in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Amount to indent the paragraph, in pixels")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tabs
  (of-object "GtkSourceView")
  (prop-type "GParamBoxed")
  (docs "Custom tabs for this text")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursor-visible
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "If the insertion cursor is shown")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property buffer
  (of-object "GtkSourceView")
  (prop-type "GParamObject")
  (docs "The buffer which is displayed")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property overwrite
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether entered text overwrites existing contents")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property accepts-tab
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether Tab will result in a tab character being entered")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-line-numbers
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display line numbers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-line-marks
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display line mark pixbufs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tab-width
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "Width of a tab character expressed in spaces")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-width
  (of-object "GtkSourceView")
  (prop-type "GParamInt")
  (docs "Number of spaces to use for each step of indent")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-indent
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to enable auto indentation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property insert-spaces-instead-of-tabs
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to insert spaces instead of tabs")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property show-right-margin
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to display the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property right-margin-position
  (of-object "GtkSourceView")
  (prop-type "GParamUInt")
  (docs "Position of the right margin")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property smart-home-end
  (of-object "GtkSourceView")
  (prop-type "GParamEnum")
  (docs "HOME and END keys move to first/last non whitespace characters on line before going to the start/end of the line")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property highlight-current-line
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to highlight the current line")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property indent-on-tab
  (of-object "GtkSourceView")
  (prop-type "GParamBoolean")
  (docs "Whether to indent the selected text when the tab key is pressed")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GtkSourceSearchFlags

