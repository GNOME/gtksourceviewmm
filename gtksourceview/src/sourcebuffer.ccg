/* sourcebuffer.hg
 * 
 * Copyright (C) 2004-2005 Jae Jang
 * Copyright (C) 2005-2006 Rob Page
 * Copyright (C)2006 Dodji Seketeli
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
#include <gtksourceviewmm/sourcebuffer.h>
#include <gtksourceview/gtksourcebuffer.h>

namespace gtksourceview
{

SourceBuffer::SourceBuffer (const Glib::RefPtr<SourceLanguage> &language) :
    _CONSTRUCT
{
    if (language)
    {
        gtk_source_buffer_set_language (GTK_SOURCE_BUFFER (gobject_),
                                        language->gobj ()) ;
    }
    else
    {
        gtk_source_buffer_set_language (GTK_SOURCE_BUFFER (gobject_),
                                        NULL) ;
    }
}

bool SourceBuffer::backward_iter_to_source_mark(Gtk::TextIter& iter)
{
    return gtk_source_buffer_backward_iter_to_source_mark(gobj(), iter.gobj(), NULL);
}

bool SourceBuffer::forward_iter_to_source_mark(Gtk::TextIter& iter)
{
    return gtk_source_buffer_forward_iter_to_source_mark(gobj(), iter.gobj(), NULL);
}

Glib::SListHandle<Glib::RefPtr<SourceMark> > SourceBuffer::get_source_marks_at_line(int line) const
{
    return Glib::SListHandle<Glib::RefPtr<SourceMark> >(gtk_source_buffer_get_source_marks_at_line(const_cast<GtkSourceBuffer*>(gobj()), line, NULL), Glib::OWNERSHIP_SHALLOW);
}

Glib::SListHandle<Glib::RefPtr<SourceMark> > SourceBuffer::get_source_marks_at_iter(Gtk::TextIter& iter) const
{
    return Glib::SListHandle<Glib::RefPtr<SourceMark> >(gtk_source_buffer_get_source_marks_at_iter(const_cast<GtkSourceBuffer*>(gobj()), iter.gobj(), NULL), Glib::OWNERSHIP_SHALLOW);
}

}//end namespace gtksourceview


