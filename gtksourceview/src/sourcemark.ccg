/* sourcemark.cc
 *
 * Copyright (C) 2008 Jonathon Jongsma
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <gtksourceview/gtksourcemark.h>

namespace gtksourceview
{

//This is custom implemented because the C _new() function specifies an extra left-gravity property:
SourceMark::SourceMark(const Glib::ustring& category, const Glib::ustring& name)
:
  _CONSTRUCT("name", (name.empty() ? NULL : name.c_str()), "category", category.c_str(), "left-gravity", TRUE)
{}


Glib::RefPtr<SourceMark> SourceMark::next()
{
  Glib::RefPtr<SourceMark> result = Glib::wrap (gtk_source_mark_next(const_cast<GtkSourceMark*>(gobj()), NULL));
  if (result)
  {
    result->reference();
  }
  return result;
}

Glib::RefPtr<const SourceMark> SourceMark::next() const
{
  Glib::RefPtr<const SourceMark> result = Glib::wrap (gtk_source_mark_next(const_cast<GtkSourceMark*>(gobj()), NULL));
  if (result)
  {
    result->reference();
  }
  return result;
}

Glib::RefPtr<SourceMark> SourceMark::prev()
{
  Glib::RefPtr<SourceMark> result =  Glib::wrap (gtk_source_mark_prev(const_cast<GtkSourceMark*>(gobj()), NULL));
  if (result)
  {
    result->reference();
  }
  return result;
}

Glib::RefPtr<const SourceMark> SourceMark::prev() const
{
  Glib::RefPtr<const SourceMark> result =  Glib::wrap (gtk_source_mark_prev(const_cast<GtkSourceMark*>(gobj()), NULL));
  if (result)
  {
    result->reference();
  }
  return result;
}


} //namespace gtksourceview

